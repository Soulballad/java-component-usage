buildscript {
    ext {
        SpringBootVersion = "2.2.0.RELEASE"
        SpringBootAdminVersion = "2.2.0"
        SpringCloudOfficialVersion = "Hoxton.RELEASE"
        SpringCloudNetflixVersion = "2.2.0.RELEASE"
        SpringCloudAlibabaVersion = "2.2.0.RELEASE"
        SpringCloudConsulVersion = "2.2.0.RELEASE"
        SpringCloudServicesVersion = "2.2.0.RELEASE"
        SpringCloudCirbakRetryVersion = "1.0.0.RELEASE"
        platformBomVersion = "Cairo-SR5"
        swaggerVersion = "2.9.2"
        knife4jVersion = "1.9.6"
        mybatisSpringBootVersion = "2.1.3"
        knife4jSpringBootVersion = "2.0.3"
        druidjSpringBootVersion = "1.1.10"
        fastjsonVersion = "1.2.9"
        zipkinVersion = "2.11.9"
        restEasyVersion = "3.0.19.Final"
        junitVersion="4.12"
    }

    repositories {
        mavenLocal()
        maven {
            url = uri('http://repo.maven.apache.org/maven2')
        }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${SpringBootVersion}")
    }
}

configure(allprojects) { project ->
    group = 'com.soulballad.usage'
    version = '0.0.1-SNAPSHOT'

    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'maven-publish'
    apply plugin: 'idea'

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
        options.compilerArgs += "-parameters"
    }
}

subprojects {
    dependencies {
        // 通用依赖
        compile(
                "org.springframework.boot:spring-boot-dependencies:${SpringBootVersion}",
                "de.codecentric:spring-boot-admin-dependencies:${SpringBootAdminVersion}",
                "org.springframework.cloud:spring-cloud-dependencies:${SpringCloudOfficialVersion}",
                "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${SpringCloudServicesVersion}",
                "org.springframework.cloud:spring-cloud-netflix-dependencies:${SpringCloudNetflixVersion}",
                "org.springframework.cloud:spring-cloud-consul-dependencies:${SpringCloudConsulVersion}",
                "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${SpringCloudAlibabaVersion}",
                "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${SpringCloudAlibabaVersion}",
                "org.springframework.cloud:spring-cloud-starter-circuitbreaker-spring-retry:${SpringCloudCirbakRetryVersion}",
                "io.springfox:springfox-swagger2:${swaggerVersion}",
                "io.springfox:springfox-swagger-ui:${swaggerVersion}",
                "com.github.xiaoymin:swagger-bootstrap-ui:${knife4jVersion}",
                "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}",
                "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4jSpringBootVersion}",
                "com.alibaba:druid-spring-boot-starter:${druidjSpringBootVersion}",
                "com.alibaba:fastjson:${fastjsonVersion}",
                "io.zipkin.java:zipkin-server:${zipkinVersion}",
                "io.zipkin.java:zipkin-autoconfigure-ui:${zipkinVersion}",
                "org.jboss.resteasy:resteasy-jaxrs:${restEasyVersion}",
                "org.jboss.resteasy:resteasy-client:${restEasyVersion}",
                "org.jboss.resteasy:resteasy-netty4:${restEasyVersion}",
                "org.jboss.resteasy:resteasy-jackson-provider:${restEasyVersion}",
                "org.jboss.resteasy:resteasy-jaxb-provider:${restEasyVersion}",
                "junit:junit:${junitVersion}"
        )
    }
}

dependencyManagement {
    dependencies {
        dependency "org.springframework.boot:spring-boot-dependencies:${SpringBootVersion}"
        dependency "de.codecentric:spring-boot-admin-dependencies:${SpringBootAdminVersion}"
        dependency "org.springframework.cloud:spring-cloud-dependencies:${SpringCloudOfficialVersion}"
        dependency "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${SpringCloudServicesVersion}"
        dependency "org.springframework.cloud:spring-cloud-netflix-dependencies:${SpringCloudNetflixVersion}"
        dependency "org.springframework.cloud:spring-cloud-consul-dependencies:${SpringCloudConsulVersion}"
        dependency "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${SpringCloudAlibabaVersion}"
        dependency "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${SpringCloudAlibabaVersion}"
        dependency "org.springframework.cloud:spring-cloud-starter-circuitbreaker-spring-retry:${SpringCloudCirbakRetryVersion}"
        dependency "io.springfox:springfox-swagger2:${swaggerVersion}"
        dependency "io.springfox:springfox-swagger-ui:${swaggerVersion}"
        dependency "com.github.xiaoymin:swagger-bootstrap-ui:${knife4jVersion}"
        dependency "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}"
        dependency "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4jSpringBootVersion}"
        dependency "com.alibaba:druid-spring-boot-starter:${druidjSpringBootVersion}"
        dependency "com.alibaba:fastjson:${fastjsonVersion}"
        dependency "io.zipkin.java:zipkin-server:${zipkinVersion}"
        dependency "io.zipkin.java:zipkin-autoconfigure-ui:${zipkinVersion}"
        dependency "org.jboss.resteasy:resteasy-jaxrs:${restEasyVersion}"
        dependency "org.jboss.resteasy:resteasy-client:${restEasyVersion}"
        dependency "org.jboss.resteasy:resteasy-netty4:${restEasyVersion}"
        dependency "org.jboss.resteasy:resteasy-jackson-provider:${restEasyVersion}"
        dependency "org.jboss.resteasy:resteasy-jaxb-provider:${restEasyVersion}"
        dependency "junit:junit:${junitVersion}"
    }
}
